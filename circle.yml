#version: 2
#jobs:
#  build:
#    working_directory: ~/code
#    docker:
#      - image: circleci/android:api-25-alpha
#    environment:
#      TERM: dumb
#      JVM_OPTS: -Xmx3200m
#    steps:
#      - checkout
#      - restore_cache:
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "sample/build.gradle" }}
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "sample/build.gradle" }}
#      - run:
#          name: emulator
#          command: emulator -avd circleci-android25 -no-audio -no-window:
#          background: true
#      - run:
#          name: screenshots
#          command: ./gradlew verifyMode screenshotTests
#      - run:
#                name: Run Tests
#                command: ./gradlew test
#      - store_artifacts:
#          path: app/build/reports
#          destination: reports
#      - store_test_results:
#          path: app/build/test-results
#
machine:
  environment:
    PATH: "~/$CIRCLE_PROJECT_REPONAME/gradle-2.9/bin:$PATH"
    TERM: "dumb"
    ADB_INSTALL_TIMEOUT: "10"
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError"'

dependencies:
  pre:
    - pip install Pillow
    - wget "https://services.gradle.org/distributions/gradle-2.9-bin.zip"; unzip gradle-2.9-bin.zip
    - echo y | android update sdk --no-ui --all --filter tool,extra-android-m2repository,extra-android-support,extra-google-google_play_services,extra-google-m2repository,android-23
    - echo y | android update sdk --no-ui --all --filter build-tools-23.0.2

test:
  override:
    # start the emulator
    - mksdcard -l e 512M mysdcard.img
    - emulator -avd circleci-android22 -no-audio -sdcard mysdcard.img -skin 768x1280:
        background: true
        parallel: true
    # wait for it to have booted
    - circle-android wait-for-boot
    # unlock the emulator screen
    - sleep 30
    - adb shell input keyevent 82
    # run tests  against the emulator.
    - ./gradlew verifyMode screenshotTests
    # copy the build outputs to artifacts
    - cp -r app/build/outputs $CIRCLE_ARTIFACTS
    # copy the test results to the test results directory.
    - cp -r app/build/outputs/androidTest-results/* $CIRCLE_TEST_REPORTS

